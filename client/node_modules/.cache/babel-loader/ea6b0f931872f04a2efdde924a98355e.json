{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/ExtendedTweet.js\";\nimport React from \"react\";\n\nconst hashtags = data => {\n  const extended_tweet = data.extended_tweet;\n\n  if (extended_tweet && extended_tweet.entities && extended_tweet.entities.hashtags) {\n    return extended_tweet.entities.hashtags.map(hashtag => React.createElement(\"span\", {\n      key: data.id + hashtag.text,\n      className: \"ui label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"#\", hashtag.text));\n  }\n};\n\nconst annotations = data => {\n  const extended_tweet = data.extended_tweet;\n\n  if (extended_tweet && extended_tweet.entities && extended_tweet.entities.annotations) {\n    return extended_tweet.entities.annotations.context.map(context => React.createElement(\"span\", {\n      className: \"ui teal label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, context.context_entity_name));\n  }\n};\n\nconst title = data => {\n  const extended_tweet = data.extended_tweet;\n\n  if (data.extended_tweet && data.extended_tweet.entities && data.extended_tweet.entities.urls[0] && data.extended_tweet.entities.urls[0].unwound) {\n    return data.extended_tweet.entities.urls[0].unwound.title;\n  }\n};\n\nconst full_text = data => {\n  if (data.extended_tweet && data.extended_tweet.full_text) {\n    return data.extended_tweet.full_text;\n  } else {\n    return data.text;\n  }\n};\n\nconst ExtendedTweet = ({\n  data\n}) => {\n  return React.createElement(\"div\", {\n    className: \"ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"ui header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, title(data)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, full_text(data)), hashtags(data), annotations(data));\n};\n\nexport default ExtendedTweet;","map":{"version":3,"sources":["/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/ExtendedTweet.js"],"names":["React","hashtags","data","extended_tweet","entities","map","hashtag","id","text","annotations","context","context_entity_name","title","urls","unwound","full_text","ExtendedTweet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAGC,IAAI,IAAI;AAAA,QACfC,cADe,GACID,IADJ,CACfC,cADe;;AAGvB,MACEA,cAAc,IACdA,cAAc,CAACC,QADf,IAEAD,cAAc,CAACC,QAAf,CAAwBH,QAH1B,EAIE;AACA,WAAOE,cAAc,CAACC,QAAf,CAAwBH,QAAxB,CAAiCI,GAAjC,CAAqCC,OAAO,IACjD;AAAM,MAAA,GAAG,EAAEJ,IAAI,CAACK,EAAL,GAAUD,OAAO,CAACE,IAA7B;AAAmC,MAAA,SAAS,EAAC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACIF,OAAO,CAACE,IADZ,CADK,CAAP;AAKD;AACF,CAdD;;AAgBA,MAAMC,WAAW,GAAGP,IAAI,IAAI;AAAA,QAClBC,cADkB,GACCD,IADD,CAClBC,cADkB;;AAE1B,MACEA,cAAc,IACdA,cAAc,CAACC,QADf,IAEAD,cAAc,CAACC,QAAf,CAAwBK,WAH1B,EAIE;AACA,WAAON,cAAc,CAACC,QAAf,CAAwBK,WAAxB,CAAoCC,OAApC,CAA4CL,GAA5C,CAAgDK,OAAO,IAC5D;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCA,OAAO,CAACC,mBAAzC,CADK,CAAP;AAGD;AACF,CAXD;;AAaA,MAAMC,KAAK,GAAGV,IAAI,IAAI;AAAA,QACZC,cADY,GACOD,IADP,CACZC,cADY;;AAGpB,MACED,IAAI,CAACC,cAAL,IACAD,IAAI,CAACC,cAAL,CAAoBC,QADpB,IAEAF,IAAI,CAACC,cAAL,CAAoBC,QAApB,CAA6BS,IAA7B,CAAkC,CAAlC,CAFA,IAGAX,IAAI,CAACC,cAAL,CAAoBC,QAApB,CAA6BS,IAA7B,CAAkC,CAAlC,EAAqCC,OAJvC,EAKE;AACA,WAAOZ,IAAI,CAACC,cAAL,CAAoBC,QAApB,CAA6BS,IAA7B,CAAkC,CAAlC,EAAqCC,OAArC,CAA6CF,KAApD;AACD;AACF,CAXD;;AAaA,MAAMG,SAAS,GAAGb,IAAI,IAAI;AACxB,MAAIA,IAAI,CAACC,cAAL,IAAuBD,IAAI,CAACC,cAAL,CAAoBY,SAA/C,EAA0D;AACxD,WAAOb,IAAI,CAACC,cAAL,CAAoBY,SAA3B;AACD,GAFD,MAEO;AACL,WAAOb,IAAI,CAACM,IAAZ;AACD;AACF,CAND;;AAQA,MAAMQ,aAAa,GAAG,CAAC;AAAEd,EAAAA;AAAF,CAAD,KAAc;AAClC,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BU,KAAK,CAACV,IAAD,CAAhC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIa,SAAS,CAACb,IAAD,CAAb,CAFF,EAGGD,QAAQ,CAACC,IAAD,CAHX,EAIGO,WAAW,CAACP,IAAD,CAJd,CADF;AAQD,CATD;;AAWA,eAAec,aAAf","sourcesContent":["import React from \"react\";\n\nconst hashtags = data => {\n  const { extended_tweet } = data;\n\n  if (\n    extended_tweet &&\n    extended_tweet.entities &&\n    extended_tweet.entities.hashtags\n  ) {\n    return extended_tweet.entities.hashtags.map(hashtag => (\n      <span key={data.id + hashtag.text} className=\"ui label\">\n        #{hashtag.text}\n      </span>\n    ));\n  }\n};\n\nconst annotations = data => {\n  const { extended_tweet } = data;\n  if (\n    extended_tweet &&\n    extended_tweet.entities &&\n    extended_tweet.entities.annotations\n  ) {\n    return extended_tweet.entities.annotations.context.map(context => (\n      <span className=\"ui teal label\">{context.context_entity_name}</span>\n    ));\n  }\n};\n\nconst title = data => {\n  const { extended_tweet } = data;\n\n  if (\n    data.extended_tweet &&\n    data.extended_tweet.entities &&\n    data.extended_tweet.entities.urls[0] &&\n    data.extended_tweet.entities.urls[0].unwound\n  ) {\n    return data.extended_tweet.entities.urls[0].unwound.title;\n  }\n};\n\nconst full_text = data => {\n  if (data.extended_tweet && data.extended_tweet.full_text) {\n    return data.extended_tweet.full_text;\n  } else {\n    return data.text;\n  }\n};\n\nconst ExtendedTweet = ({ data }) => {\n  return (\n    <div className=\"ui segment\">\n      <h4 className=\"ui header\">{title(data)}</h4>\n      <p>{full_text(data)}</p>\n      {hashtags(data)}\n      {annotations(data)}\n    </div>\n  );\n};\n\nexport default ExtendedTweet;\n"]},"metadata":{},"sourceType":"module"}