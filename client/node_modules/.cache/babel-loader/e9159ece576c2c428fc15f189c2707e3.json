{"ast":null,"code":"import _slicedToArray from \"/Users/anthonyvu/apps/twitter/local-news-streamer/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/AnnotationTweets.js\";\nimport React, { useEffect, useState } from \"react\";\nimport request from \"request\";\nimport util from \"util\";\nimport http from \"http\";\nimport axios from \"axios\";\nimport Tweet from \"./Tweet\";\n\nconst AnnotationTweets = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tweets = _useState2[0],\n        setTweets = _useState2[1];\n\n  const fetchTweets = () => {\n    http.get(\"/api/stream/filter\", stream => {\n      console.log(\"level 1\");\n      stream.on(\"data\", data => {\n        data = data.toString();\n        console.log(\"data =>\", JSON.parse(data));\n      });\n    }); // stream\n    //   .on(\"data\", data => {\n    //     try {\n    //       console.log(\"here\");\n    //       const json = JSON.parse(data);\n    //       console.log(json.data);\n    //       setTweets([...tweets, json.data]);\n    //     } catch (e) {}\n    //   })\n    //   .on(\"error\", error => {\n    //     if ((error.code = \"ETIMEDOUT\")) {\n    //       stream.emit(\"timeout\");\n    //     }\n    //   });\n  };\n\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"ui container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, tweets.map(tweet => React.createElement(Tweet, {\n    key: tweet.id,\n    data: tweet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n};\n\nexport default AnnotationTweets;","map":{"version":3,"sources":["/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/AnnotationTweets.js"],"names":["React","useEffect","useState","request","util","http","axios","Tweet","AnnotationTweets","tweets","setTweets","fetchTweets","get","stream","console","log","on","data","toString","JSON","parse","map","tweet","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA,oBACDN,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,QACtBO,MADsB;AAAA,QACdC,SADc;;AAG7B,QAAMC,WAAW,GAAG,MAAM;AACxBN,IAAAA,IAAI,CAACO,GAAL,CAAS,oBAAT,EAA+BC,MAAM,IAAI;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAF,MAAAA,MAAM,CAACG,EAAP,CAAU,MAAV,EAAkBC,IAAI,IAAI;AACxBA,QAAAA,IAAI,GAAGA,IAAI,CAACC,QAAL,EAAP;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAvB;AACD,OAHD;AAID,KAND,EADwB,CASxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAvBD;;AAyBAhB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACY,GAAP,CAAWC,KAAK,IACf,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,IAAA,IAAI,EAAED,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAOD,CAvCD;;AAyCA,eAAed,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport request from \"request\";\nimport util from \"util\";\nimport http from \"http\";\nimport axios from \"axios\";\n\nimport Tweet from \"./Tweet\";\n\nconst AnnotationTweets = () => {\n  const [tweets, setTweets] = useState([]);\n\n  const fetchTweets = () => {\n    http.get(\"/api/stream/filter\", stream => {\n      console.log(\"level 1\");\n      stream.on(\"data\", data => {\n        data = data.toString();\n        console.log(\"data =>\", JSON.parse(data));\n      });\n    });\n\n    // stream\n    //   .on(\"data\", data => {\n    //     try {\n    //       console.log(\"here\");\n    //       const json = JSON.parse(data);\n    //       console.log(json.data);\n    //       setTweets([...tweets, json.data]);\n    //     } catch (e) {}\n    //   })\n    //   .on(\"error\", error => {\n    //     if ((error.code = \"ETIMEDOUT\")) {\n    //       stream.emit(\"timeout\");\n    //     }\n    //   });\n  };\n\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n\n  return (\n    <div className=\"ui container\">\n      {tweets.map(tweet => (\n        <Tweet key={tweet.id} data={tweet} />\n      ))}\n    </div>\n  );\n};\n\nexport default AnnotationTweets;\n"]},"metadata":{},"sourceType":"module"}