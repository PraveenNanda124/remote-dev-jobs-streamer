{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/ExtendedTweet.js\";\nimport React from \"react\";\nimport \"../stylesheets/Tweet.css\";\nimport Moment from \"react-moment\";\n\nconst hashtags = data => {\n  const extended_tweet = data.extended_tweet;\n\n  if (extended_tweet && extended_tweet.entities && extended_tweet.entities.hashtags) {\n    return extended_tweet.entities.hashtags.map(hashtag => React.createElement(\"span\", {\n      key: data.id + hashtag.text,\n      className: \"ui small label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"#\", hashtag.text));\n  }\n};\n\nconst annotations = data => {\n  const extended_tweet = data.extended_tweet;\n\n  if (extended_tweet && extended_tweet.entities && extended_tweet.entities.annotations) {\n    return extended_tweet.entities.annotations.context.map(context => React.createElement(\"span\", {\n      className: \"annotations ui small teal basic label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, context.context_entity_name));\n  }\n};\n\nconst title = data => {\n  const extended_tweet = data.extended_tweet;\n  const entities = data.entities;\n\n  if (extended_tweet && extended_tweet.entities && extended_tweet.entities.urls[0] && extended_tweet.entities.urls[0].unwound && extended_tweet.entities.urls[0].unwound.title !== null) {\n    return extended_tweet.entities.urls[0].unwound.title;\n  } else if (entities && entities.urls[0] && entities.urls[0].unwound && entities.urls[0].unwound.title !== null) {\n    return entities.urls[0].unwound.title;\n  } else {\n    return data.text.substring(0, 32) + \"...\";\n  }\n};\n\nconst full_text = data => {\n  const extended_tweet = data.extended_tweet;\n\n  if (extended_tweet && extended_tweet.full_text) {\n    return extended_tweet.full_text;\n  } else {\n    return data.text;\n  }\n};\n\nconst ExtendedTweet = ({\n  data\n}) => {\n  return React.createElement(\"div\", {\n    className: \"ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"ui header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, title(data), \" \", React.createElement(\"div\", {\n    class: \"sub header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, data.user.name, \" \", React.createElement(Moment, {\n    class: \"ui right aligned sub header\",\n    parse: \"ddd MMM DD HH:mm:ss +HHmm YYYY\",\n    fromNow: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, data.created_at))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, full_text(data)), hashtags(data), annotations(data));\n};\n\nexport default ExtendedTweet;","map":{"version":3,"sources":["/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/ExtendedTweet.js"],"names":["React","Moment","hashtags","data","extended_tweet","entities","map","hashtag","id","text","annotations","context","context_entity_name","title","urls","unwound","substring","full_text","ExtendedTweet","user","name","created_at"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../stylesheets/Tweet.css\";\nimport Moment from \"react-moment\";\n\nconst hashtags = data => {\n  const { extended_tweet } = data;\n\n  if (\n    extended_tweet &&\n    extended_tweet.entities &&\n    extended_tweet.entities.hashtags\n  ) {\n    return extended_tweet.entities.hashtags.map(hashtag => (\n      <span key={data.id + hashtag.text} className=\"ui small label\">\n        #{hashtag.text}\n      </span>\n    ));\n  }\n};\n\nconst annotations = data => {\n  const { extended_tweet } = data;\n\n  if (\n    extended_tweet &&\n    extended_tweet.entities &&\n    extended_tweet.entities.annotations\n  ) {\n    return extended_tweet.entities.annotations.context.map(context => (\n      <span className=\"annotations ui small teal basic label\">\n        {context.context_entity_name}\n      </span>\n    ));\n  }\n};\n\nconst title = data => {\n  const { extended_tweet } = data;\n  const { entities } = data;\n\n  if (\n    extended_tweet &&\n    extended_tweet.entities &&\n    extended_tweet.entities.urls[0] &&\n    extended_tweet.entities.urls[0].unwound &&\n    extended_tweet.entities.urls[0].unwound.title !== null\n  ) {\n    return extended_tweet.entities.urls[0].unwound.title;\n  } else if (\n    entities &&\n    entities.urls[0] &&\n    entities.urls[0].unwound &&\n    entities.urls[0].unwound.title !== null\n  ) {\n    return entities.urls[0].unwound.title;\n  } else {\n    return data.text.substring(0, 32) + \"...\";\n  }\n};\n\nconst full_text = data => {\n  const { extended_tweet } = data;\n\n  if (extended_tweet && extended_tweet.full_text) {\n    return extended_tweet.full_text;\n  } else {\n    return data.text;\n  }\n};\n\nconst ExtendedTweet = ({ data }) => {\n  return (\n    <div className=\"ui segment\">\n      <h4 className=\"ui header\">\n        {title(data)}{\" \"}\n        <div class=\"sub header\">\n          {data.user.name}{\" \"}\n          <Moment\n            class=\"ui right aligned sub header\"\n            parse=\"ddd MMM DD HH:mm:ss +HHmm YYYY\"\n            fromNow\n          >\n            {data.created_at}\n          </Moment>\n        </div>\n      </h4>\n\n      <p>{full_text(data)}</p>\n      {hashtags(data)}\n      {annotations(data)}\n    </div>\n  );\n};\n\nexport default ExtendedTweet;\n"]},"metadata":{},"sourceType":"module"}