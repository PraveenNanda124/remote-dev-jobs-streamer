{"ast":null,"code":"import _slicedToArray from \"/Users/anthonyvu/apps/twitter/local-news-streamer/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/AnnotationTweets.js\";\nimport React, { useEffect, useState } from \"react\";\nimport request from \"request\";\nimport util from \"util\";\nimport Tweet from \"./Tweet\";\n\nconst AnnotationTweets = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tweets = _useState2[0],\n        setTweets = _useState2[1];\n\n  const fetchTweets = () => {\n    const get = util.promisify(request.get);\n    const config = {\n      uri: \"http://localhost:3000/api/stream/filter\",\n      timeout: 20000\n    };\n    const stream = request.get(config);\n    stream.on(\"data\", data => {\n      try {\n        // const json = JSON.parse(data);\n        console.log(JSON.parse(data));\n        data = JSON.parse(data);\n        setTweets([...tweets, data.data]);\n      } catch (e) {}\n    }).on(\"error\", error => {\n      if (error.code = \"ETIMEDOUT\") {\n        stream.emit(\"timeout\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"ui container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, tweets.map(tweet => React.createElement(Tweet, {\n    key: tweet.id,\n    data: tweet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n};\n\nexport default AnnotationTweets;","map":{"version":3,"sources":["/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/AnnotationTweets.js"],"names":["React","useEffect","useState","request","util","Tweet","AnnotationTweets","tweets","setTweets","fetchTweets","get","promisify","config","uri","timeout","stream","on","data","console","log","JSON","parse","e","error","code","emit","map","tweet","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA,oBACDJ,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,QACtBK,MADsB;AAAA,QACdC,SADc;;AAG7B,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,GAAG,GAAGN,IAAI,CAACO,SAAL,CAAeR,OAAO,CAACO,GAAvB,CAAZ;AAEA,UAAME,MAAM,GAAG;AACbC,MAAAA,GAAG,EAAE,yCADQ;AAEbC,MAAAA,OAAO,EAAE;AAFI,KAAf;AAKA,UAAMC,MAAM,GAAGZ,OAAO,CAACO,GAAR,CAAYE,MAAZ,CAAf;AAEAG,IAAAA,MAAM,CACHC,EADH,CACM,MADN,EACcC,IAAI,IAAI;AAClB,UAAI;AACF;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAZ;AACAA,QAAAA,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACAT,QAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYU,IAAI,CAACA,IAAjB,CAAD,CAAT;AACD,OALD,CAKE,OAAOK,CAAP,EAAU,CAAE;AACf,KARH,EASGN,EATH,CASM,OATN,EASeO,KAAK,IAAI;AACpB,UAAKA,KAAK,CAACC,IAAN,GAAa,WAAlB,EAAgC;AAC9BT,QAAAA,MAAM,CAACU,IAAP,CAAY,SAAZ;AACD;AACF,KAbH;AAcD,GAxBD;;AA0BAxB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACmB,GAAP,CAAWC,KAAK,IACf,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,IAAA,IAAI,EAAED,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAOD,CAxCD;;AA0CA,eAAerB,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport request from \"request\";\nimport util from \"util\";\n\nimport Tweet from \"./Tweet\";\n\nconst AnnotationTweets = () => {\n  const [tweets, setTweets] = useState([]);\n\n  const fetchTweets = () => {\n    const get = util.promisify(request.get);\n\n    const config = {\n      uri: \"http://localhost:3000/api/stream/filter\",\n      timeout: 20000\n    };\n\n    const stream = request.get(config);\n\n    stream\n      .on(\"data\", data => {\n        try {\n          // const json = JSON.parse(data);\n          console.log(JSON.parse(data));\n          data = JSON.parse(data);\n          setTweets([...tweets, data.data]);\n        } catch (e) {}\n      })\n      .on(\"error\", error => {\n        if ((error.code = \"ETIMEDOUT\")) {\n          stream.emit(\"timeout\");\n        }\n      });\n  };\n\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n\n  return (\n    <div className=\"ui container\">\n      {tweets.map(tweet => (\n        <Tweet key={tweet.id} data={tweet} />\n      ))}\n    </div>\n  );\n};\n\nexport default AnnotationTweets;\n"]},"metadata":{},"sourceType":"module"}