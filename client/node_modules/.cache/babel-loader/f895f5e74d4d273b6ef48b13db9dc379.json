{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/ExtendedTweet.js\";\nimport React from \"react\";\n\nconst hashtags = data => {\n  if (data.extended_tweet.entities && data.extended_tweet.entities.hashtags) {\n    return data.extended_tweet.entities.hashtags.map(hashtag => React.createElement(\"span\", {\n      key: hashtag.text,\n      className: \"ui label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, \"#\", hashtag.tag));\n  }\n};\n\nconst title = data => {\n  if (data.extended_tweet && data.extended_tweet.entities && data.extended_tweet.entities.urls[0] && data.extended_tweet.entities.urls[0].unwound) {\n    return data.extended_tweet.entities.urls[0].unwound.title;\n  }\n};\n\nconst full_text = data => {\n  if (data.extended_tweet && data.extended_tweet.full_text) {\n    return data.extended_tweet.full_text;\n  } else {\n    return data.text;\n  }\n};\n\nconst ExtendedTweet = ({\n  data\n}) => {\n  return React.createElement(\"div\", {\n    className: \"ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"ui header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, title(data)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, full_text(data)), React.createElement(\"span\", {\n    class: \"ui label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, hashtags(data)));\n};\n\nexport default ExtendedTweet;","map":{"version":3,"sources":["/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/ExtendedTweet.js"],"names":["React","hashtags","data","extended_tweet","entities","map","hashtag","text","tag","title","urls","unwound","full_text","ExtendedTweet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAGC,IAAI,IAAI;AACvB,MAAIA,IAAI,CAACC,cAAL,CAAoBC,QAApB,IAAgCF,IAAI,CAACC,cAAL,CAAoBC,QAApB,CAA6BH,QAAjE,EAA2E;AACzE,WAAOC,IAAI,CAACC,cAAL,CAAoBC,QAApB,CAA6BH,QAA7B,CAAsCI,GAAtC,CAA0CC,OAAO,IACtD;AAAM,MAAA,GAAG,EAAEA,OAAO,CAACC,IAAnB;AAAyB,MAAA,SAAS,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACID,OAAO,CAACE,GADZ,CADK,CAAP;AAKD;AACF,CARD;;AAUA,MAAMC,KAAK,GAAGP,IAAI,IAAI;AACpB,MACEA,IAAI,CAACC,cAAL,IACAD,IAAI,CAACC,cAAL,CAAoBC,QADpB,IAEAF,IAAI,CAACC,cAAL,CAAoBC,QAApB,CAA6BM,IAA7B,CAAkC,CAAlC,CAFA,IAGAR,IAAI,CAACC,cAAL,CAAoBC,QAApB,CAA6BM,IAA7B,CAAkC,CAAlC,EAAqCC,OAJvC,EAKE;AACA,WAAOT,IAAI,CAACC,cAAL,CAAoBC,QAApB,CAA6BM,IAA7B,CAAkC,CAAlC,EAAqCC,OAArC,CAA6CF,KAApD;AACD;AACF,CATD;;AAWA,MAAMG,SAAS,GAAGV,IAAI,IAAI;AACxB,MAAIA,IAAI,CAACC,cAAL,IAAuBD,IAAI,CAACC,cAAL,CAAoBS,SAA/C,EAA0D;AACxD,WAAOV,IAAI,CAACC,cAAL,CAAoBS,SAA3B;AACD,GAFD,MAEO;AACL,WAAOV,IAAI,CAACK,IAAZ;AACD;AACF,CAND;;AAQA,MAAMM,aAAa,GAAG,CAAC;AAAEX,EAAAA;AAAF,CAAD,KAAc;AAClC,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BO,KAAK,CAACP,IAAD,CAAhC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIU,SAAS,CAACV,IAAD,CAAb,CAFF,EAGE;AAAM,IAAA,KAAK,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBD,QAAQ,CAACC,IAAD,CAAhC,CAHF,CADF;AAOD,CARD;;AAUA,eAAeW,aAAf","sourcesContent":["import React from \"react\";\n\nconst hashtags = data => {\n  if (data.extended_tweet.entities && data.extended_tweet.entities.hashtags) {\n    return data.extended_tweet.entities.hashtags.map(hashtag => (\n      <span key={hashtag.text} className=\"ui label\">\n        #{hashtag.tag}\n      </span>\n    ));\n  }\n};\n\nconst title = data => {\n  if (\n    data.extended_tweet &&\n    data.extended_tweet.entities &&\n    data.extended_tweet.entities.urls[0] &&\n    data.extended_tweet.entities.urls[0].unwound\n  ) {\n    return data.extended_tweet.entities.urls[0].unwound.title;\n  }\n};\n\nconst full_text = data => {\n  if (data.extended_tweet && data.extended_tweet.full_text) {\n    return data.extended_tweet.full_text;\n  } else {\n    return data.text;\n  }\n};\n\nconst ExtendedTweet = ({ data }) => {\n  return (\n    <div className=\"ui segment\">\n      <h4 className=\"ui header\">{title(data)}</h4>\n      <p>{full_text(data)}</p>\n      <span class=\"ui label\">{hashtags(data)}</span>\n    </div>\n  );\n};\n\nexport default ExtendedTweet;\n"]},"metadata":{},"sourceType":"module"}