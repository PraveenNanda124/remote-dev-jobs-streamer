{"ast":null,"code":"import _slicedToArray from \"/Users/anthonyvu/apps/twitter/local-news-streamer/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/AnnotationTweets.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport request from \"request\";\nimport util from \"util\";\nimport Tweet from \"./Tweet\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"add_tweet\":\n      return [...state, action.payload];\n\n    case \"error\":\n      return;\n\n    default:\n      return state;\n  }\n};\n\nconst AnnotationTweets = () => {\n  const _useReducer = useReducer(reducer, []),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  const tweets = state;\n\n  const fetchTweets = () => {\n    const get = util.promisify(request.get);\n    const stream = request.get(\"http://localhost:3000/api/stream/filter\");\n    stream.on(\"data\", data => {\n      try {\n        console.log(JSON.parse(data));\n        data = JSON.parse(data);\n\n        if (data.data) {\n          dispatch({\n            type: \"add_tweet\",\n            payload: data.data\n          });\n        }\n      } catch (e) {}\n    }).on(\"error\", error => {\n      if (error.code = \"ETIMEDOUT\") {\n        console.log(\"TIMEOUT\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"ui container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, tweets.map(tweet => React.createElement(Tweet, {\n    key: tweet.id,\n    data: tweet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })));\n};\n\nexport default AnnotationTweets;","map":{"version":3,"sources":["/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/AnnotationTweets.js"],"names":["React","useEffect","useReducer","request","util","Tweet","reducer","state","action","type","payload","AnnotationTweets","dispatch","tweets","fetchTweets","get","promisify","stream","on","data","console","log","JSON","parse","e","error","code","map","tweet","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAK,OAAL;AACE;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMI,gBAAgB,GAAG,MAAM;AAAA,sBACHT,UAAU,CAACI,OAAD,EAAU,EAAV,CADP;AAAA;AAAA,QACtBC,KADsB;AAAA,QACfK,QADe;;AAE7B,QAAMC,MAAM,GAAGN,KAAf;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxB,UAAMC,GAAG,GAAGX,IAAI,CAACY,SAAL,CAAeb,OAAO,CAACY,GAAvB,CAAZ;AACA,UAAME,MAAM,GAAGd,OAAO,CAACY,GAAR,CAAY,yCAAZ,CAAf;AAEAE,IAAAA,MAAM,CACHC,EADH,CACM,MADN,EACcC,IAAI,IAAI;AAClB,UAAI;AACFC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAZ;AACAA,QAAAA,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;;AACA,YAAIA,IAAI,CAACA,IAAT,EAAe;AACbP,UAAAA,QAAQ,CAAC;AAAEH,YAAAA,IAAI,EAAE,WAAR;AAAqBC,YAAAA,OAAO,EAAES,IAAI,CAACA;AAAnC,WAAD,CAAR;AACD;AACF,OAND,CAME,OAAOK,CAAP,EAAU,CAAE;AACf,KATH,EAUGN,EAVH,CAUM,OAVN,EAUeO,KAAK,IAAI;AACpB,UAAKA,KAAK,CAACC,IAAN,GAAa,WAAlB,EAAgC;AAC9BN,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AACF,KAdH;AAeD,GAnBD;;AAqBApB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACc,GAAP,CAAWC,KAAK,IACf,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,IAAA,IAAI,EAAED,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAOD,CApCD;;AAsCA,eAAejB,gBAAf","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport request from \"request\";\nimport util from \"util\";\n\nimport Tweet from \"./Tweet\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"add_tweet\":\n      return [...state, action.payload];\n    case \"error\":\n      return;\n    default:\n      return state;\n  }\n};\n\nconst AnnotationTweets = () => {\n  const [state, dispatch] = useReducer(reducer, []);\n  const tweets = state;\n\n  const fetchTweets = () => {\n    const get = util.promisify(request.get);\n    const stream = request.get(\"http://localhost:3000/api/stream/filter\");\n\n    stream\n      .on(\"data\", data => {\n        try {\n          console.log(JSON.parse(data));\n          data = JSON.parse(data);\n          if (data.data) {\n            dispatch({ type: \"add_tweet\", payload: data.data });\n          }\n        } catch (e) {}\n      })\n      .on(\"error\", error => {\n        if ((error.code = \"ETIMEDOUT\")) {\n          console.log(\"TIMEOUT\");\n        }\n      });\n  };\n\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n\n  return (\n    <div className=\"ui container\">\n      {tweets.map(tweet => (\n        <Tweet key={tweet.id} data={tweet} />\n      ))}\n    </div>\n  );\n};\n\nexport default AnnotationTweets;\n"]},"metadata":{},"sourceType":"module"}