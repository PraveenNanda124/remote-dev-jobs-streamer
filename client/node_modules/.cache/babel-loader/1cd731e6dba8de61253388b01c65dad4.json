{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/ExtendedTweet.js\";\nimport React from \"react\";\nimport \"../stylesheets/Tweet.css\";\nimport Moment from \"react-moment\";\n\nconst hashtags = data => {\n  const _data$extended_tweet = data.extended_tweet,\n        extended_tweet = _data$extended_tweet === void 0 ? {} : _data$extended_tweet;\n\n  const _data$extended_tweet2 = data.extended_tweet,\n        _data$extended_tweet3 = _data$extended_tweet2 === void 0 ? {\n    entities: \"No entities \"\n  } : _data$extended_tweet2,\n        entities = _data$extended_tweet3.entities;\n\n  const _data$extended_tweet$ = data.extended_tweet.entities,\n        _data$extended_tweet$2 = _data$extended_tweet$ === void 0 ? {\n    hashtags: \"No hashtags\"\n  } : _data$extended_tweet$,\n        hashtags = _data$extended_tweet$2.hashtags;\n\n  if (extended_tweet !== undefined && hashtags) {\n    return extended_tweet.entities.hashtags.map(hashtag => React.createElement(\"span\", {\n      key: data.id + hashtag.text,\n      className: \"ui small label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"#\", hashtag.text));\n  }\n};\n\nconst annotations = data => {\n  const extended_tweet = data.extended_tweet;\n\n  if (extended_tweet && extended_tweet.entities && extended_tweet.entities.annotations) {\n    return extended_tweet.entities.annotations.context.map(context => React.createElement(\"span\", {\n      className: \"annotations ui small teal basic label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, context.context_entity_name));\n  } else if (data.entities) {\n    return data.entities.annotations.context.map(context => React.createElement(\"span\", {\n      className: \"annotations ui small teal basic label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, context.context_entity_name));\n  }\n};\n\nconst title = data => {\n  const extended_tweet = data.extended_tweet;\n  const entities = data.entities;\n\n  if (extended_tweet && extended_tweet.entities && extended_tweet.entities.urls[0] && extended_tweet.entities.urls[0].unwound && extended_tweet.entities.urls[0].unwound.title !== null) {\n    return extended_tweet.entities.urls[0].unwound.title;\n  } else if (entities && entities.urls[0] && entities.urls[0].unwound && entities.urls[0].unwound.title !== null) {\n    return entities.urls[0].unwound.title;\n  } else {\n    return data.text.substring(0, 32) + \"...\";\n  }\n};\n\nconst full_text = data => {\n  const extended_tweet = data.extended_tweet;\n\n  if (extended_tweet && extended_tweet.full_text) {\n    return extended_tweet.full_text;\n  } else {\n    return data.text;\n  }\n};\n\nconst ExtendedTweet = ({\n  data\n}) => {\n  return React.createElement(\"div\", {\n    className: \"ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"ui header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, title(data), \" \", React.createElement(\"div\", {\n    className: \"sub header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, data.user.name), React.createElement(Moment, {\n    className: \"sub header\",\n    parse: \"ddd MMM DD HH:mm:ss +HHmm YYYY\",\n    fromNow: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, data.created_at)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, full_text(data)), hashtags(data), annotations(data));\n};\n\nexport default ExtendedTweet;","map":{"version":3,"sources":["/Users/anthonyvu/apps/twitter/local-news-streamer/client/src/components/ExtendedTweet.js"],"names":["React","Moment","hashtags","data","extended_tweet","entities","undefined","map","hashtag","id","text","annotations","context","context_entity_name","title","urls","unwound","substring","full_text","ExtendedTweet","user","name","created_at"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,QAAQ,GAAGC,IAAI,IAAI;AAAA,+BACSA,IADT,CACfC,cADe;AAAA,QACfA,cADe,qCACE,EADF;;AAAA,gCAEiDD,IAFjD,CAEfC,cAFe;AAAA,mEAEgB;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAFhB;AAAA,QAEGA,QAFH,yBAEGA,QAFH;;AAAA,gCAKnBF,IALmB,CAIrBC,cAJqB,CAIHC,QAJG;AAAA,oEAIsB;AAAEH,IAAAA,QAAQ,EAAE;AAAZ,GAJtB;AAAA,QAISA,QAJT,0BAISA,QAJT;;AAOvB,MAAIE,cAAc,KAAKE,SAAnB,IAAgCJ,QAApC,EAA8C;AAC5C,WAAOE,cAAc,CAACC,QAAf,CAAwBH,QAAxB,CAAiCK,GAAjC,CAAqCC,OAAO,IACjD;AAAM,MAAA,GAAG,EAAEL,IAAI,CAACM,EAAL,GAAUD,OAAO,CAACE,IAA7B;AAAmC,MAAA,SAAS,EAAC,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACIF,OAAO,CAACE,IADZ,CADK,CAAP;AAKD;AACF,CAdD;;AAgBA,MAAMC,WAAW,GAAGR,IAAI,IAAI;AAAA,QAClBC,cADkB,GACCD,IADD,CAClBC,cADkB;;AAG1B,MACEA,cAAc,IACdA,cAAc,CAACC,QADf,IAEAD,cAAc,CAACC,QAAf,CAAwBM,WAH1B,EAIE;AACA,WAAOP,cAAc,CAACC,QAAf,CAAwBM,WAAxB,CAAoCC,OAApC,CAA4CL,GAA5C,CAAgDK,OAAO,IAC5D;AAAM,MAAA,SAAS,EAAC,uCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OAAO,CAACC,mBADX,CADK,CAAP;AAKD,GAVD,MAUO,IAAIV,IAAI,CAACE,QAAT,EAAmB;AACxB,WAAOF,IAAI,CAACE,QAAL,CAAcM,WAAd,CAA0BC,OAA1B,CAAkCL,GAAlC,CAAsCK,OAAO,IAClD;AAAM,MAAA,SAAS,EAAC,uCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OAAO,CAACC,mBADX,CADK,CAAP;AAKD;AACF,CApBD;;AAsBA,MAAMC,KAAK,GAAGX,IAAI,IAAI;AAAA,QACZC,cADY,GACOD,IADP,CACZC,cADY;AAAA,QAEZC,QAFY,GAECF,IAFD,CAEZE,QAFY;;AAIpB,MACED,cAAc,IACdA,cAAc,CAACC,QADf,IAEAD,cAAc,CAACC,QAAf,CAAwBU,IAAxB,CAA6B,CAA7B,CAFA,IAGAX,cAAc,CAACC,QAAf,CAAwBU,IAAxB,CAA6B,CAA7B,EAAgCC,OAHhC,IAIAZ,cAAc,CAACC,QAAf,CAAwBU,IAAxB,CAA6B,CAA7B,EAAgCC,OAAhC,CAAwCF,KAAxC,KAAkD,IALpD,EAME;AACA,WAAOV,cAAc,CAACC,QAAf,CAAwBU,IAAxB,CAA6B,CAA7B,EAAgCC,OAAhC,CAAwCF,KAA/C;AACD,GARD,MAQO,IACLT,QAAQ,IACRA,QAAQ,CAACU,IAAT,CAAc,CAAd,CADA,IAEAV,QAAQ,CAACU,IAAT,CAAc,CAAd,EAAiBC,OAFjB,IAGAX,QAAQ,CAACU,IAAT,CAAc,CAAd,EAAiBC,OAAjB,CAAyBF,KAAzB,KAAmC,IAJ9B,EAKL;AACA,WAAOT,QAAQ,CAACU,IAAT,CAAc,CAAd,EAAiBC,OAAjB,CAAyBF,KAAhC;AACD,GAPM,MAOA;AACL,WAAOX,IAAI,CAACO,IAAL,CAAUO,SAAV,CAAoB,CAApB,EAAuB,EAAvB,IAA6B,KAApC;AACD;AACF,CAtBD;;AAwBA,MAAMC,SAAS,GAAGf,IAAI,IAAI;AAAA,QAChBC,cADgB,GACGD,IADH,CAChBC,cADgB;;AAGxB,MAAIA,cAAc,IAAIA,cAAc,CAACc,SAArC,EAAgD;AAC9C,WAAOd,cAAc,CAACc,SAAtB;AACD,GAFD,MAEO;AACL,WAAOf,IAAI,CAACO,IAAZ;AACD;AACF,CARD;;AAUA,MAAMS,aAAa,GAAG,CAAC;AAAEhB,EAAAA;AAAF,CAAD,KAAc;AAClC,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,KAAK,CAACX,IAAD,CADR,OACgB;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,IAAI,CAACiB,IAAL,CAAUC,IAAvC,CADhB,EAEE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,KAAK,EAAC,gCAFR;AAGE,IAAA,OAAO,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGlB,IAAI,CAACmB,UALR,CAFF,CADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,SAAS,CAACf,IAAD,CAAb,CAZF,EAaGD,QAAQ,CAACC,IAAD,CAbX,EAcGQ,WAAW,CAACR,IAAD,CAdd,CADF;AAkBD,CAnBD;;AAqBA,eAAegB,aAAf","sourcesContent":["import React from \"react\";\nimport \"../stylesheets/Tweet.css\";\nimport Moment from \"react-moment\";\n\nconst hashtags = data => {\n  const { extended_tweet = {} } = data;\n  const { extended_tweet: { entities } = { entities: \"No entities \" } } = data;\n  const {\n    extended_tweet: { entities: { hashtags } = { hashtags: \"No hashtags\" } }\n  } = data;\n\n  if (extended_tweet !== undefined && hashtags) {\n    return extended_tweet.entities.hashtags.map(hashtag => (\n      <span key={data.id + hashtag.text} className=\"ui small label\">\n        #{hashtag.text}\n      </span>\n    ));\n  }\n};\n\nconst annotations = data => {\n  const { extended_tweet } = data;\n\n  if (\n    extended_tweet &&\n    extended_tweet.entities &&\n    extended_tweet.entities.annotations\n  ) {\n    return extended_tweet.entities.annotations.context.map(context => (\n      <span className=\"annotations ui small teal basic label\">\n        {context.context_entity_name}\n      </span>\n    ));\n  } else if (data.entities) {\n    return data.entities.annotations.context.map(context => (\n      <span className=\"annotations ui small teal basic label\">\n        {context.context_entity_name}\n      </span>\n    ));\n  }\n};\n\nconst title = data => {\n  const { extended_tweet } = data;\n  const { entities } = data;\n\n  if (\n    extended_tweet &&\n    extended_tweet.entities &&\n    extended_tweet.entities.urls[0] &&\n    extended_tweet.entities.urls[0].unwound &&\n    extended_tweet.entities.urls[0].unwound.title !== null\n  ) {\n    return extended_tweet.entities.urls[0].unwound.title;\n  } else if (\n    entities &&\n    entities.urls[0] &&\n    entities.urls[0].unwound &&\n    entities.urls[0].unwound.title !== null\n  ) {\n    return entities.urls[0].unwound.title;\n  } else {\n    return data.text.substring(0, 32) + \"...\";\n  }\n};\n\nconst full_text = data => {\n  const { extended_tweet } = data;\n\n  if (extended_tweet && extended_tweet.full_text) {\n    return extended_tweet.full_text;\n  } else {\n    return data.text;\n  }\n};\n\nconst ExtendedTweet = ({ data }) => {\n  return (\n    <div className=\"ui segment\">\n      <h4 className=\"ui header\">\n        {title(data)} <div className=\"sub header\">{data.user.name}</div>\n        <Moment\n          className=\"sub header\"\n          parse=\"ddd MMM DD HH:mm:ss +HHmm YYYY\"\n          fromNow\n        >\n          {data.created_at}\n        </Moment>\n      </h4>\n\n      <p>{full_text(data)}</p>\n      {hashtags(data)}\n      {annotations(data)}\n    </div>\n  );\n};\n\nexport default ExtendedTweet;\n"]},"metadata":{},"sourceType":"module"}